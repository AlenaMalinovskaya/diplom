import pytest                                   # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
import time                                     # –î–ª—è –ø–∞—É–∑—ã –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏–π (–Ω–∞ —Å–ª—É—á–∞–π –∞–Ω–∏–º–∞—Ü–∏–π/–∑–∞–¥–µ—Ä–∂–µ–∫)
from selenium import webdriver                  # –ë—Ä–∞—É–∑–µ—Ä–Ω—ã–π –¥—Ä–∞–π–≤–µ—Ä
from selenium.webdriver.chrome.service import Service  # –°–µ—Ä–≤–∏—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ChromeDriver
from selenium.webdriver.chrome.options import Options  # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ Chrome
from selenium.webdriver.common.by import By     # –î–ª—è –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
from selenium.webdriver.support.ui import WebDriverWait         # –û–∂–∏–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
from selenium.webdriver.support import expected_conditions as EC  # –£—Å–ª–æ–≤–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è
from selenium.webdriver.common.action_chains import ActionChains  # –î–ª—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è –∫—É—Ä—Å–æ—Ä–∞
from webdriver_manager.chrome import ChromeDriverManager         # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ChromeDriver –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
from config import URL, correct_login, incorrect_password        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ config.py

@pytest.fixture
def driver():
    options = Options()                                      # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –æ–ø—Ü–∏–π –¥–ª—è Chrome
    options.add_argument("--start-maximized")                # –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞ –≤ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–º –≤–∏–¥–µ
    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞
    yield driver                                             # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä –≤ —Ç–µ—Å—Ç
    driver.quit()                                            # –ü–æ—Å–ª–µ —Ç–µ—Å—Ç–∞ –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä

def test_incorrect_login(driver):
    wait = WebDriverWait(driver, 10)                         # –Ø–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–æ 10 —Å–µ–∫—É–Ω–¥
    driver.get(URL)                                          # –û—Ç–∫—Ä—ã—Ç–∏–µ –Ω—É–∂–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞

    # –ü—Ä–∏–Ω—è—Ç–∏–µ cookies, –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –µ—Å—Ç—å
    wait.until(EC.element_to_be_clickable((By.ID, "consentBtnall"))).click()      # –ñ–¥—ë–º –∏ –∫–ª–∏–∫–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É —Å–æ–≥–ª–∞—Å–∏—è
    wait.until(EC.invisibility_of_element_located((By.ID, "consentBtnall")))      # –ñ–¥—ë–º –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞

    # –ü–æ–∏—Å–∫ –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞
    login_buttons = wait.until(
        EC.presence_of_all_elements_located((By.XPATH, "//button[contains(@class,'userbox--toggle')]"))  # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞
    )
    visible_login_button = next((btn for btn in login_buttons if btn.is_displayed()), None)  # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—É—é –≤–∏–¥–∏–º—É—é –∫–Ω–æ–ø–∫—É
    assert visible_login_button, "‚ùå –ö–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"                                 # –ü—Ä–æ–≤–µ—Ä–∫–∞: –∫–Ω–æ–ø–∫–∞ –Ω–∞–π–¥–µ–Ω–∞

    ActionChains(driver).move_to_element(visible_login_button).perform()                     # –ù–∞–≤–æ–¥–∏–º –∫—É—Ä—Å–æ—Ä –Ω–∞ –∫–Ω–æ–ø–∫—É
    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", visible_login_button)  # –°–∫—Ä–æ–ª–ª–∏–º –∫ –∫–Ω–æ–ø–∫–µ
    visible_login_button.click()                                                             # –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ

    # –í–≤–æ–¥–∏–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
    email_field = wait.until(EC.visibility_of_element_located((By.ID, "emailld")))           # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—è email
    password_field = wait.until(EC.element_to_be_clickable((By.ID, "passwordld")))           # –ñ–¥—ë–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª—è –ø–∞—Ä–æ–ª—è
    email_field.clear()                                                                      # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ email
    email_field.send_keys(correct_login)                                                     # –í–≤–æ–¥–∏–º email
    password_field.clear()                                                                   # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è
    password_field.send_keys(incorrect_password)                                             # –í–≤–æ–¥–∏–º –∑–∞–≤–µ–¥–æ–º–æ –Ω–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å

    # –ü–æ–∏—Å–∫ –∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "P≈ôihl√°sit"
    submit_buttons = wait.until(EC.presence_of_all_elements_located(
        (By.CSS_SELECTOR, "button.btn.btn--blue.btn--filled.btn--full-width")                # –ò—â–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞
    ))
    submit_btn = next((btn for btn in submit_buttons if btn.is_displayed()), None)           # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—É—é –≤–∏–¥–∏–º—É—é
    assert submit_btn, "‚ùå –ö–Ω–æ–ø–∫–∞ 'P≈ôihl√°sit' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"                                     # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–Ω–∞ –µ—Å—Ç—å

    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", submit_btn)     # –°–∫—Ä–æ–ª–ª–∏–º –∫ –∫–Ω–æ–ø–∫–µ
    driver.execute_script("arguments[0].click();", submit_btn)                               # –ö–ª–∏–∫–∞–µ–º —á–µ—Ä–µ–∑ JavaScript

    time.sleep(2)  # –î–µ–ª–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é –ø–∞—É–∑—É, —á—Ç–æ–±—ã –æ—à–∏–±–∫–∞ —É—Å–ø–µ–ª–∞ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å—Å—è

    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ñ—Ä–∞–∑—ã –æ—à–∏–±–∫–∏
    parts = ['nespr√°vn√Ω', 'p≈ô√≠li≈° velk√©ho', 'uzamƒçen']                                       # –ß–∞—Å—Ç–∏ —Å–ª–æ–≤, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∏—â–µ–º –æ—à–∏–±–∫—É
    xpath = "//*[" + " or ".join([f"contains(text(), '{p}')" for p in parts]) + "]"          # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º XPath
    error_blocks = driver.find_elements(By.XPATH, xpath)                                     # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –±–ª–æ–∫–∏
    print(f"üîé –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å 'nespr√°vn√Ω': {len(error_blocks)}")                  # –í—ã–≤–æ–¥–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö
    for block in error_blocks:
        print("-", repr(block.text))                                                         # –ü–µ—á–∞—Ç–∞–µ–º —Ç–µ–∫—Å—Ç –∫–∞–∂–¥–æ–≥–æ

    # –°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ–∂–∏–¥–∞–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    expected_errors = [
        "Zadali jste nespr√°vn√Ω e-mail nebo heslo.",                                           # –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        "Z d≈Øvodu p≈ô√≠li≈° velk√©ho poƒçtu chybn√Ωch p≈ôihl√°≈°en√≠ byl √∫ƒçet uzamƒçen na 60 minut."     # –û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –∞–∫–∫–∞—É–Ω—Ç–∞
    ]

    found = False                                                                             # –§–ª–∞–≥, –Ω–∞—à–ª–∏ –ª–∏ –æ—à–∏–±–∫—É
    for block in error_blocks:
        text = block.text.strip()                                                             # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –±–ª–æ–∫–∞
        for expected in expected_errors:
            if expected in text and block.is_displayed():                                     # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –æ–∂–∏–¥–∞–µ–º—ã–º–∏
                found = True
                print("‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:", expected)                            # –£—Å–ø–µ—Ö ‚Äî —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ
                break

    if not found:
        driver.save_screenshot("error_screen.png")                                            # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω
        print("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: error_screen.png")

    assert found, "‚ùå –ù–∏ –æ–¥–Ω–æ –∏–∑ –æ–∂–∏–¥–∞–µ–º—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"                   # –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–∞
